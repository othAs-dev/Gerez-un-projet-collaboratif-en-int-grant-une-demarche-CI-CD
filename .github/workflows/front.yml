name: Frontend CI/CD

on:
  push:
    branches: [develop]
    paths:
      - 'front/**'
  pull_request:
    branches: [develop]
    paths:
      - 'front/**'
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/front

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install frontend dependencies
        run: npm ci

      - name: Build and execute tests
        run: |
          npm run build --if-present
          npm run test

      - name: Upload code coverage report
        uses: actions/upload-artifact@v4
        with:
          name: Jest code coverage
          path: ./front/coverage

  sonar:
    runs-on: ubuntu-latest
    needs: test
    defaults:
      run:
        working-directory: ${{ github.workspace }}/front

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install frontend dependencies
        run: npm ci

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: npm run sonar

  docker:
    runs-on: ubuntu-latest
    needs: sonar
    defaults:
      run:
        working-directory: ${{ github.workspace }}/front
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push frontend Docker image
        run: |
          docker build -t bobapp-front .
          docker tag bobapp-front ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/bobapp-front:latest